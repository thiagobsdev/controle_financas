package com.meusprojetos.controle_financas.dto;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import org.springframework.security.core.GrantedAuthority;

import com.meusprojetos.controle_financas.entities.User;

import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

public class UserDto {
	
	@NotBlank(message = "O nome n√£o pode estar vazio")
	@Size(min = 3, max = 80, message = "O Nome deve ter entre 03 e 80 caracteres")
	private String name;
	
	@NotNull(message = "Campo requerido")
	@Email
	private String email;
	
	@NotNull(message = "Campo requerido")
	private List<String> roles = new ArrayList<>();
	
	public UserDto(User entity) {
		name = entity.getName();
		email = entity.getEmail();
		for (GrantedAuthority obj :entity.getRoles()) {
			roles.add(obj.getAuthority());
		}
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	

	public List<String> getRoles() {
		return roles;
	}

	public void setRoles(List<String> roles) {
		this.roles = roles;
	}

	@Override
	public int hashCode() {
		return Objects.hash(email, name, roles);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		UserDto other = (UserDto) obj;
		return Objects.equals(email, other.email) && Objects.equals(name, other.name)
				&& Objects.equals(roles, other.roles);
	}

	@Override
	public String toString() {
		return "UserDto [name=" + name + ", email=" + email + ", roles=" + roles + "]";
	}

	

	
	

}
